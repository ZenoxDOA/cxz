local Library = {}
Library.__index = Library

-- Services with obfuscation
local services = {
    TweenService = game:GetService(string.char(84,119,101,101,110,83,101,114,118,105,99,101)),
    UserInputService = game:GetService(string.char(85,115,101,114,73,110,112,117,116,83,101,114,118,105,99,101)),
    RunService = game:GetService(string.char(82,117,110,83,101,114,118,105,99,101)),
    Players = game:GetService(string.char(80,108,97,121,101,114,115))
}

-- Professional color scheme
local Colors = {
    Background = Color3.fromRGB(15, 15, 15),
    Secondary = Color3.fromRGB(20, 20, 20),
    Accent = Color3.fromRGB(25, 25, 25),
    Border = Color3.fromRGB(40, 40, 40),
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(180, 180, 180),
    Primary = Color3.fromRGB(100, 150, 255),
    Success = Color3.fromRGB(100, 200, 100),
    Warning = Color3.fromRGB(255, 200, 100),
    Error = Color3.fromRGB(255, 100, 100),
    Hover = Color3.fromRGB(35, 35, 35)
}

-- Utility functions
local function createTween(object, info, properties)
    return services.TweenService:Create(object, info, properties)
end

local function createCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 6)
    corner.Parent = parent
    return corner
end

local function createStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Colors.Border
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

local function createGradient(parent, colors, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new(colors or {
        ColorSequenceKeypoint.new(0, Colors.Secondary),
        ColorSequenceKeypoint.new(1, Colors.Accent)
    })
    gradient.Rotation = rotation or 90
    gradient.Parent = parent
    return gradient
end

local function addHoverEffect(element, hoverColor, normalColor)
    element.MouseEnter:Connect(function()
        createTween(element, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = hoverColor or Colors.Hover
        }):Play()
    end)
    
    element.MouseLeave:Connect(function()
        createTween(element, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = normalColor or Colors.Accent
        }):Play()
    end)
end

local function generateRandomName(prefix)
    local chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    local name = prefix or ""
    for i = 1, math.random(8, 12) do
        local randomIndex = math.random(1, #chars)
        name = name .. chars:sub(randomIndex, randomIndex)
    end
    return name
end

function Library:CreateWindow(options)
    options = options or {}
    local windowName = options.Name or "Professional UI"
    local windowSize = options.Size or UDim2.new(0, 700, 0, 500)
    
    local Window = {}
    Window.Tabs = {}
    Window.CurrentTab = nil
    Window.Keybind = options.Keybind or Enum.KeyCode.RightShift
    Window.Visible = true
    
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = generateRandomName("UI_")
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = generateRandomName("Main_")
    MainFrame.Size = windowSize
    MainFrame.Position = UDim2.new(0.5, -windowSize.X.Offset/2, 0.5, -windowSize.Y.Offset/2)
    MainFrame.BackgroundColor3 = Colors.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    createCorner(MainFrame, 8)
    createStroke(MainFrame, Colors.Border, 1)
    
    -- Drop shadow effect
    local Shadow = Instance.new("Frame")
    Shadow.Name = "Shadow"
    Shadow.Size = UDim2.new(1, 20, 1, 20)
    Shadow.Position = UDim2.new(0, -10, 0, -10)
    Shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.BackgroundTransparency = 0.8
    Shadow.ZIndex = MainFrame.ZIndex - 1
    Shadow.Parent = MainFrame
    createCorner(Shadow, 12)
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = generateRandomName("Title_")
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.BackgroundColor3 = Colors.Secondary
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    createCorner(TitleBar, 8)
    createGradient(TitleBar, {
        ColorSequenceKeypoint.new(0, Colors.Secondary),
        ColorSequenceKeypoint.new(1, Colors.Accent)
    })
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -20, 1, 0)
    TitleLabel.Position = UDim2.new(0, 20, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = windowName
    TitleLabel.TextColor3 = Colors.Text
    TitleLabel.TextSize = 16
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TitleBar
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0, 5)
    CloseButton.BackgroundColor3 = Colors.Error
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "Ã—"
    CloseButton.TextColor3 = Colors.Text
    CloseButton.TextSize = 18
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Parent = TitleBar
    createCorner(CloseButton, 4)
    addHoverEffect(CloseButton, Color3.fromRGB(255, 80, 80), Colors.Error)
    
    CloseButton.MouseButton1Click:Connect(function()
        Window:Destroy()
    end)
    
    -- Tab Container
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = generateRandomName("TabCont_")
    TabContainer.Size = UDim2.new(0, 180, 1, -50)
    TabContainer.Position = UDim2.new(0, 10, 0, 50)
    TabContainer.BackgroundColor3 = Colors.Secondary
    TabContainer.BorderSizePixel = 0
    TabContainer.Parent = MainFrame
    createCorner(TabContainer, 6)
    createStroke(TabContainer, Colors.Border)
    
    local TabList = Instance.new("UIListLayout")
    TabList.SortOrder = Enum.SortOrder.LayoutOrder
    TabList.Padding = UDim.new(0, 4)
    TabList.Parent = TabContainer
    
    local TabPadding = Instance.new("UIPadding")
    TabPadding.PaddingTop = UDim.new(0, 8)
    TabPadding.PaddingLeft = UDim.new(0, 8)
    TabPadding.PaddingRight = UDim.new(0, 8)
    TabPadding.Parent = TabContainer
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = generateRandomName("Content_")
    ContentContainer.Size = UDim2.new(1, -210, 1, -50)
    ContentContainer.Position = UDim2.new(0, 200, 0, 50)
    ContentContainer.BackgroundColor3 = Colors.Secondary
    ContentContainer.BorderSizePixel = 0
    ContentContainer.Parent = MainFrame
    createCorner(ContentContainer, 6)
    createStroke(ContentContainer, Colors.Border)
    
    -- Dragging functionality
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    services.UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    services.UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Keybind toggle functionality
    services.UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Window.Keybind then
            Window.Visible = not Window.Visible
            ScreenGui.Enabled = Window.Visible
        end
    end)
    
    function Window:CreateTab(options)
        options = options or {}
        local tabName = options.Name or "Tab"
        local tabIcon = options.Icon or "ðŸ“‹"
        
        local Tab = {}
        Tab.Elements = {}
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = generateRandomName("Tab_")
        TabButton.Size = UDim2.new(1, 0, 0, 40)
        TabButton.BackgroundColor3 = Colors.Accent
        TabButton.BorderSizePixel = 0
        TabButton.Text = tabIcon .. "  " .. tabName
        TabButton.TextColor3 = Colors.TextSecondary
        TabButton.TextSize = 14
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextXAlignment = Enum.TextXAlignment.Left
        TabButton.Parent = TabContainer
        createCorner(TabButton, 4)
        addHoverEffect(TabButton, Colors.Hover, Colors.Accent)
        
        local TabPadding = Instance.new("UIPadding")
        TabPadding.PaddingLeft = UDim.new(0, 12)
        TabPadding.Parent = TabButton
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = generateRandomName("TabContent_")
        TabContent.Size = UDim2.new(1, -20, 1, -20)
        TabContent.Position = UDim2.new(0, 10, 0, 10)
        TabContent.BackgroundTransparency = 1
        TabContent.BorderSizePixel = 0
        TabContent.ScrollBarThickness = 6
        TabContent.ScrollBarImageColor3 = Colors.Primary
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.Visible = false
        TabContent.Parent = ContentContainer
        
        local ContentList = Instance.new("UIListLayout")
        ContentList.SortOrder = Enum.SortOrder.LayoutOrder
        ContentList.Padding = UDim.new(0, 8)
        ContentList.Parent = TabContent
        
        ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentList.AbsoluteContentSize.Y + 20)
        end)
        
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Content.Visible = false
                tab.Button.BackgroundColor3 = Colors.Accent
                tab.Button.TextColor3 = Colors.TextSecondary
            end
            
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Colors.Primary
            TabButton.TextColor3 = Colors.Text
            Window.CurrentTab = Tab
        end)
        
        Tab.Button = TabButton
        Tab.Content = TabContent
        Tab.ContentList = ContentList
        
        if #Window.Tabs == 0 then
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Colors.Primary
            TabButton.TextColor3 = Colors.Text
            Window.CurrentTab = Tab
        end
        
        table.insert(Window.Tabs, Tab)
        
        function Tab:CreateButton(options)
            options = options or {}
            local buttonText = options.Text or "Button"
            local callback = options.Callback or function() end
            
            local ButtonFrame = Instance.new("Frame")
            ButtonFrame.Name = generateRandomName("BtnFrame_")
            ButtonFrame.Size = UDim2.new(1, 0, 0, 40)
            ButtonFrame.BackgroundTransparency = 1
            ButtonFrame.Parent = TabContent
            
            local Button = Instance.new("TextButton")
            Button.Name = generateRandomName("Btn_")
            Button.Size = UDim2.new(1, 0, 1, 0)
            Button.BackgroundColor3 = Colors.Accent
            Button.BorderSizePixel = 0
            Button.Text = buttonText
            Button.TextColor3 = Colors.Text
            Button.TextSize = 14
            Button.Font = Enum.Font.Gotham
            Button.Parent = ButtonFrame
            createCorner(Button, 6)
            createStroke(Button, Colors.Border)
            addHoverEffect(Button, Colors.Primary, Colors.Accent)
            
            Button.MouseButton1Click:Connect(function()
                createTween(Button, TweenInfo.new(0.1), {BackgroundColor3 = Colors.Success}):Play()
                task.wait(0.1)
                createTween(Button, TweenInfo.new(0.1), {BackgroundColor3 = Colors.Accent}):Play()
                task.spawn(callback)
            end)
            
            return Button
        end
        
        function Tab:CreateToggle(options)
            options = options or {}
            local toggleText = options.Text or "Toggle"
            local defaultValue = options.Default or false
            local callback = options.Callback or function() end
            
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Name = generateRandomName("TogFrame_")
            ToggleFrame.Size = UDim2.new(1, 0, 0, 40)
            ToggleFrame.BackgroundColor3 = Colors.Accent
            ToggleFrame.BorderSizePixel = 0
            ToggleFrame.Parent = TabContent
            createCorner(ToggleFrame, 6)
            createStroke(ToggleFrame, Colors.Border)
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Name = generateRandomName("Toggle_")
            ToggleButton.Size = UDim2.new(1, -50, 1, 0)
            ToggleButton.BackgroundTransparency = 1
            ToggleButton.Text = toggleText
            ToggleButton.TextColor3 = Colors.Text
            ToggleButton.TextSize = 14
            ToggleButton.Font = Enum.Font.Gotham
            ToggleButton.TextXAlignment = Enum.TextXAlignment.Left
            ToggleButton.Parent = ToggleFrame
            
            local TogglePadding = Instance.new("UIPadding")
            TogglePadding.PaddingLeft = UDim.new(0, 12)
            TogglePadding.Parent = ToggleButton
            
            local ToggleIndicator = Instance.new("Frame")
            ToggleIndicator.Name = generateRandomName("Indicator_")
            ToggleIndicator.Size = UDim2.new(0, 40, 0, 20)
            ToggleIndicator.Position = UDim2.new(1, -45, 0.5, -10)
            ToggleIndicator.BackgroundColor3 = defaultValue and Colors.Success or Colors.Error
            ToggleIndicator.BorderSizePixel = 0
            ToggleIndicator.Parent = ToggleFrame
            createCorner(ToggleIndicator, 10)
            
            local ToggleCircle = Instance.new("Frame")
            ToggleCircle.Size = UDim2.new(0, 16, 0, 16)
            ToggleCircle.Position = defaultValue and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            ToggleCircle.BackgroundColor3 = Colors.Text
            ToggleCircle.BorderSizePixel = 0
            ToggleCircle.Parent = ToggleIndicator
            createCorner(ToggleCircle, 8)
            
            local toggled = defaultValue
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                local newColor = toggled and Colors.Success or Colors.Error
                local newPosition = toggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
                
                createTween(ToggleIndicator, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = newColor}):Play()
                createTween(ToggleCircle, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Position = newPosition}):Play()
                
                task.spawn(callback, toggled)
            end)
            
            return ToggleButton
        end
        
        function Tab:CreateSlider(options)
            options = options or {}
            local sliderText = options.Text or "Slider"
            local minValue = options.Min or 0
            local maxValue = options.Max or 100
            local defaultValue = options.Default or minValue
            local callback = options.Callback or function() end
            
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Name = generateRandomName("SliderFrame_")
            SliderFrame.Size = UDim2.new(1, 0, 0, 60)
            SliderFrame.BackgroundColor3 = Colors.Accent
            SliderFrame.BorderSizePixel = 0
            SliderFrame.Parent = TabContent
            createCorner(SliderFrame, 6)
            createStroke(SliderFrame, Colors.Border)
            
            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Size = UDim2.new(1, -20, 0, 25)
            SliderLabel.Position = UDim2.new(0, 12, 0, 5)
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Text = sliderText .. ": " .. defaultValue
            SliderLabel.TextColor3 = Colors.Text
            SliderLabel.TextSize = 14
            SliderLabel.Font = Enum.Font.Gotham
            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            SliderLabel.Parent = SliderFrame
            
            local SliderBack = Instance.new("Frame")
            SliderBack.Size = UDim2.new(1, -24, 0, 6)
            SliderBack.Position = UDim2.new(0, 12, 0, 35)
            SliderBack.BackgroundColor3 = Colors.Background
            SliderBack.BorderSizePixel = 0
            SliderBack.Parent = SliderFrame
            createCorner(SliderBack, 3)
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
            SliderFill.BackgroundColor3 = Colors.Primary
            SliderFill.BorderSizePixel = 0
            SliderFill.Parent = SliderBack
            createCorner(SliderFill, 3)
            
            local SliderHandle = Instance.new("Frame")
            SliderHandle.Size = UDim2.new(0, 16, 0, 16)
            SliderHandle.Position = UDim2.new((defaultValue - minValue) / (maxValue - minValue), -8, 0.5, -8)
            SliderHandle.BackgroundColor3 = Colors.Text
            SliderHandle.BorderSizePixel = 0
            SliderHandle.Parent = SliderBack
            createCorner(SliderHandle, 8)
            
            local dragging = false
            local currentValue = defaultValue
            
            SliderBack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            
            services.UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            services.UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local mouse = services.UserInputService:GetMouseLocation()
                    local relativeX = mouse.X - SliderBack.AbsolutePosition.X
                    local percentage = math.clamp(relativeX / SliderBack.AbsoluteSize.X, 0, 1)
                    currentValue = math.floor(minValue + (maxValue - minValue) * percentage)
                    
                    SliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                    SliderHandle.Position = UDim2.new(percentage, -8, 0.5, -8)
                    SliderLabel.Text = sliderText .. ": " .. currentValue
                    
                    task.spawn(callback, currentValue)
                end
            end)
            
            return SliderFrame
        end
        
        function Tab:CreateKeybind(options)
            options = options or {}
            local keybindText = options.Text or "Keybind"
            local defaultKey = options.Default or "None"
            local callback = options.Callback or function() end
            
            local KeybindFrame = Instance.new("Frame")
            KeybindFrame.Name = generateRandomName("KeybindFrame_")
            KeybindFrame.Size = UDim2.new(1, 0, 0, 40)
            KeybindFrame.BackgroundColor3 = Colors.Accent
            KeybindFrame.BorderSizePixel = 0
            KeybindFrame.Parent = TabContent
            createCorner(KeybindFrame, 6)
            createStroke(KeybindFrame, Colors.Border)
            
            local KeybindLabel = Instance.new("TextLabel")
            KeybindLabel.Size = UDim2.new(1, -80, 1, 0)
            KeybindLabel.Position = UDim2.new(0, 12, 0, 0)
            KeybindLabel.BackgroundTransparency = 1
            KeybindLabel.Text = keybindText
            KeybindLabel.TextColor3 = Colors.Text
            KeybindLabel.TextSize = 14
            KeybindLabel.Font = Enum.Font.Gotham
            KeybindLabel.TextXAlignment = Enum.TextXAlignment.Left
            KeybindLabel.Parent = KeybindFrame
            
            local KeybindButton = Instance.new("TextButton")
            KeybindButton.Size = UDim2.new(0, 60, 0, 25)
            KeybindButton.Position = UDim2.new(1, -70, 0.5, -12.5)
            KeybindButton.BackgroundColor3 = Colors.Background
            KeybindButton.BorderSizePixel = 0
            KeybindButton.Text = defaultKey
            KeybindButton.TextColor3 = Colors.Text
            KeybindButton.TextSize = 12
            KeybindButton.Font = Enum.Font.Gotham
            KeybindButton.Parent = KeybindFrame
            createCorner(KeybindButton, 4)
            createStroke(KeybindButton, Colors.Border)
            
            local currentKey = defaultKey
            local listening = false
            
            KeybindButton.MouseButton1Click:Connect(function()
                if listening then return end
                listening = true
                KeybindButton.Text = "..."
                KeybindButton.BackgroundColor3 = Colors.Primary
                
                local connection
                connection = services.UserInputService.InputBegan:Connect(function(input, gameProcessed)
                    if gameProcessed then return end
                    if input.UserInputType == Enum.UserInputType.Keyboard then
                        currentKey = input.KeyCode.Name
                        KeybindButton.Text = currentKey
                        KeybindButton.BackgroundColor3 = Colors.Background
                        listening = false
                        connection:Disconnect()
                        
                        services.UserInputService.InputBegan:Connect(function(inp, gp)
                            if gp then return end
                            if inp.KeyCode.Name == currentKey then
                                task.spawn(callback)
                            end
                        end)
                    end
                end)
            end)
            
            return KeybindFrame
        end
        
        return Tab
    end
    
    function Window:SetKeybind(keycode)
        Window.Keybind = keycode
    end
    
    function Window:Destroy()
        ScreenGui:Destroy()
    end
    
    return Window
end

return Library
