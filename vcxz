local Library = {}
Library.__index = Library

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Clean CSGO color scheme
local Colors = {
    Background = Color3.fromRGB(12, 12, 12),
    Secondary = Color3.fromRGB(18, 18, 18),
    Accent = Color3.fromRGB(22, 22, 22),
    Border = Color3.fromRGB(35, 35, 35),
    Text = Color3.fromRGB(255, 255, 255),
    TextDim = Color3.fromRGB(160, 160, 160),
    Primary = Color3.fromRGB(76, 142, 255),
    Success = Color3.fromRGB(76, 175, 80),
    Error = Color3.fromRGB(244, 67, 54),
    Hover = Color3.fromRGB(28, 28, 28)
}

local function createTween(object, info, properties)
    return TweenService:Create(object, info, properties)
end

local function createCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 4)
    corner.Parent = parent
    return corner
end

local function createStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Colors.Border
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

function Library:CreateWindow(options)
    options = options or {}
    local windowName = options.Name or "CSGO Cheat"
    
    local Window = {}
    Window.Tabs = {}
    Window.CurrentTab = nil
    
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CSGOCheat_" .. math.random(1000, 9999)
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    
    -- Main Frame - Smaller size like CSGO cheats
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 480, 0, 360)
    MainFrame.Position = UDim2.new(0.5, -240, 0.5, -180)
    MainFrame.BackgroundColor3 = Colors.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    createCorner(MainFrame, 4)
    createStroke(MainFrame, Colors.Border)
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 28)
    TitleBar.BackgroundColor3 = Colors.Secondary
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    createCorner(TitleBar, 4)
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -10, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = windowName
    TitleLabel.TextColor3 = Colors.Text
    TitleLabel.TextSize = 12
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TitleBar
    
    -- Tab Container
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Size = UDim2.new(0, 120, 1, -32)
    TabContainer.Position = UDim2.new(0, 4, 0, 32)
    TabContainer.BackgroundColor3 = Colors.Secondary
    TabContainer.BorderSizePixel = 0
    TabContainer.Parent = MainFrame
    createCorner(TabContainer, 3)
    
    local TabList = Instance.new("UIListLayout")
    TabList.SortOrder = Enum.SortOrder.LayoutOrder
    TabList.Padding = UDim.new(0, 1)
    TabList.Parent = TabContainer
    
    local TabPadding = Instance.new("UIPadding")
    TabPadding.PaddingAll = UDim.new(0, 4)
    TabPadding.Parent = TabContainer
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -132, 1, -32)
    ContentContainer.Position = UDim2.new(0, 128, 0, 32)
    ContentContainer.BackgroundColor3 = Colors.Secondary
    ContentContainer.BorderSizePixel = 0
    ContentContainer.Parent = MainFrame
    createCorner(ContentContainer, 3)
    
    -- Dragging
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    function Window:CreateTab(options)
        options = options or {}
        local tabName = options.Name or "Tab"
        
        local Tab = {}
        Tab.Elements = {}
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = tabName
        TabButton.Size = UDim2.new(1, 0, 0, 24)
        TabButton.BackgroundColor3 = Colors.Accent
        TabButton.BorderSizePixel = 0
        TabButton.Text = tabName
        TabButton.TextColor3 = Colors.TextDim
        TabButton.TextSize = 11
        TabButton.Font = Enum.Font.SourceSans
        TabButton.Parent = TabContainer
        createCorner(TabButton, 2)
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = tabName .. "Content"
        TabContent.Size = UDim2.new(1, -8, 1, -8)
        TabContent.Position = UDim2.new(0, 4, 0, 4)
        TabContent.BackgroundTransparency = 1
        TabContent.BorderSizePixel = 0
        TabContent.ScrollBarThickness = 3
        TabContent.ScrollBarImageColor3 = Colors.Primary
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.Visible = false
        TabContent.Parent = ContentContainer
        
        local ContentList = Instance.new("UIListLayout")
        ContentList.SortOrder = Enum.SortOrder.LayoutOrder
        ContentList.Padding = UDim.new(0, 3)
        ContentList.Parent = TabContent
        
        local ContentPadding = Instance.new("UIPadding")
        ContentPadding.PaddingAll = UDim.new(0, 4)
        ContentPadding.Parent = TabContent
        
        ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentList.AbsoluteContentSize.Y + 8)
        end)
        
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Content.Visible = false
                tab.Button.BackgroundColor3 = Colors.Accent
                tab.Button.TextColor3 = Colors.TextDim
            end
            
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Colors.Primary
            TabButton.TextColor3 = Colors.Text
            Window.CurrentTab = Tab
        end)
        
        Tab.Button = TabButton
        Tab.Content = TabContent
        Tab.ContentList = ContentList
        
        if #Window.Tabs == 0 then
            TabContent.Visible = true
            TabButton.BackgroundColor3 = Colors.Primary
            TabButton.TextColor3 = Colors.Text
            Window.CurrentTab = Tab
        end
        
        table.insert(Window.Tabs, Tab)
        
        function Tab:CreateButton(options)
            options = options or {}
            local buttonText = options.Text or "Button"
            local callback = options.Callback or function() end
            
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, 0, 0, 22)
            Button.BackgroundColor3 = Colors.Accent
            Button.BorderSizePixel = 0
            Button.Text = buttonText
            Button.TextColor3 = Colors.Text
            Button.TextSize = 11
            Button.Font = Enum.Font.SourceSans
            Button.Parent = TabContent
            createCorner(Button, 2)
            
            Button.MouseEnter:Connect(function()
                createTween(Button, TweenInfo.new(0.15), {BackgroundColor3 = Colors.Hover}):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                createTween(Button, TweenInfo.new(0.15), {BackgroundColor3 = Colors.Accent}):Play()
            end)
            
            Button.MouseButton1Click:Connect(function()
                createTween(Button, TweenInfo.new(0.1), {BackgroundColor3 = Colors.Primary}):Play()
                task.wait(0.1)
                createTween(Button, TweenInfo.new(0.1), {BackgroundColor3 = Colors.Accent}):Play()
                callback()
            end)
            
            return Button
        end
        
        function Tab:CreateToggle(options)
            options = options or {}
            local toggleText = options.Text or "Toggle"
            local defaultValue = options.Default or false
            local callback = options.Callback or function() end
            
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Size = UDim2.new(1, 0, 0, 22)
            ToggleFrame.BackgroundColor3 = Colors.Accent
            ToggleFrame.BorderSizePixel = 0
            ToggleFrame.Parent = TabContent
            createCorner(ToggleFrame, 2)
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Size = UDim2.new(1, -24, 1, 0)
            ToggleButton.Position = UDim2.new(0, 0, 0, 0)
            ToggleButton.BackgroundTransparency = 1
            ToggleButton.Text = toggleText
            ToggleButton.TextColor3 = Colors.Text
            ToggleButton.TextSize = 11
            ToggleButton.Font = Enum.Font.SourceSans
            ToggleButton.TextXAlignment = Enum.TextXAlignment.Left
            ToggleButton.Parent = ToggleFrame
            
            local TogglePadding = Instance.new("UIPadding")
            TogglePadding.PaddingLeft = UDim.new(0, 6)
            TogglePadding.Parent = ToggleButton
            
            local ToggleIndicator = Instance.new("Frame")
            ToggleIndicator.Size = UDim2.new(0, 14, 0, 14)
            ToggleIndicator.Position = UDim2.new(1, -18, 0.5, -7)
            ToggleIndicator.BackgroundColor3 = defaultValue and Colors.Success or Colors.Error
            ToggleIndicator.BorderSizePixel = 0
            ToggleIndicator.Parent = ToggleFrame
            createCorner(ToggleIndicator, 2)
            
            local toggled = defaultValue
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                local newColor = toggled and Colors.Success or Colors.Error
                createTween(ToggleIndicator, TweenInfo.new(0.2), {BackgroundColor3 = newColor}):Play()
                callback(toggled)
            end)
            
            return ToggleButton
        end
        
        function Tab:CreateSlider(options)
            options = options or {}
            local sliderText = options.Text or "Slider"
            local minValue = options.Min or 0
            local maxValue = options.Max or 100
            local defaultValue = options.Default or minValue
            local callback = options.Callback or function() end
            
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Size = UDim2.new(1, 0, 0, 38)
            SliderFrame.BackgroundColor3 = Colors.Accent
            SliderFrame.BorderSizePixel = 0
            SliderFrame.Parent = TabContent
            createCorner(SliderFrame, 2)
            
            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Size = UDim2.new(1, -8, 0, 18)
            SliderLabel.Position = UDim2.new(0, 6, 0, 2)
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Text = sliderText .. ": " .. defaultValue
            SliderLabel.TextColor3 = Colors.Text
            SliderLabel.TextSize = 11
            SliderLabel.Font = Enum.Font.SourceSans
            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            SliderLabel.Parent = SliderFrame
            
            local SliderBack = Instance.new("Frame")
            SliderBack.Size = UDim2.new(1, -12, 0, 4)
            SliderBack.Position = UDim2.new(0, 6, 0, 22)
            SliderBack.BackgroundColor3 = Colors.Background
            SliderBack.BorderSizePixel = 0
            SliderBack.Parent = SliderFrame
            createCorner(SliderBack, 2)
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
            SliderFill.BackgroundColor3 = Colors.Primary
            SliderFill.BorderSizePixel = 0
            SliderFill.Parent = SliderBack
            createCorner(SliderFill, 2)
            
            local dragging = false
            local currentValue = defaultValue
            
            SliderBack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local mouse = UserInputService:GetMouseLocation()
                    local relativeX = mouse.X - SliderBack.AbsolutePosition.X
                    local percentage = math.clamp(relativeX / SliderBack.AbsoluteSize.X, 0, 1)
                    currentValue = math.floor(minValue + (maxValue - minValue) * percentage)
                    
                    SliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                    SliderLabel.Text = sliderText .. ": " .. currentValue
                    callback(currentValue)
                end
            end)
            
            return SliderFrame
        end
        
        function Tab:CreateDropdown(options)
            options = options or {}
            local dropdownText = options.Text or "Dropdown"
            local dropdownOptions = options.Options or {"Option 1", "Option 2"}
            local defaultValue = options.Default or dropdownOptions[1]
            local callback = options.Callback or function() end
            
            local DropdownFrame = Instance.new("Frame")
            DropdownFrame.Size = UDim2.new(1, 0, 0, 22)
            DropdownFrame.BackgroundTransparency = 1
            DropdownFrame.Parent = TabContent
            
            local DropdownButton = Instance.new("TextButton")
            DropdownButton.Size = UDim2.new(1, 0, 1, 0)
            DropdownButton.BackgroundColor3 = Colors.Accent
            DropdownButton.BorderSizePixel = 0
            DropdownButton.Text = dropdownText .. ": " .. defaultValue
            DropdownButton.TextColor3 = Colors.Text
            DropdownButton.TextSize = 11
            DropdownButton.Font = Enum.Font.SourceSans
            DropdownButton.TextXAlignment = Enum.TextXAlignment.Left
            DropdownButton.Parent = DropdownFrame
            createCorner(DropdownButton, 2)
            
            local DropdownPadding = Instance.new("UIPadding")
            DropdownPadding.PaddingLeft = UDim.new(0, 6)
            DropdownPadding.Parent = DropdownButton
            
            local DropdownList = Instance.new("Frame")
            DropdownList.Size = UDim2.new(1, 0, 0, #dropdownOptions * 20)
            DropdownList.Position = UDim2.new(0, 0, 1, 2)
            DropdownList.BackgroundColor3 = Colors.Background
            DropdownList.BorderSizePixel = 0
            DropdownList.Visible = false
            DropdownList.Parent = DropdownFrame
            DropdownList.ZIndex = 10
            createCorner(DropdownList, 2)
            createStroke(DropdownList, Colors.Border)
            
            local ListLayout = Instance.new("UIListLayout")
            ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            ListLayout.Parent = DropdownList
            
            local currentValue = defaultValue
            local isOpen = false
            
            for _, option in ipairs(dropdownOptions) do
                local OptionButton = Instance.new("TextButton")
                OptionButton.Size = UDim2.new(1, 0, 0, 20)
                OptionButton.BackgroundColor3 = Colors.Accent
                OptionButton.BorderSizePixel = 0
                OptionButton.Text = option
                OptionButton.TextColor3 = Colors.Text
                OptionButton.TextSize = 10
                OptionButton.Font = Enum.Font.SourceSans
                OptionButton.Parent = DropdownList
                
                OptionButton.MouseEnter:Connect(function()
                    OptionButton.BackgroundColor3 = Colors.Hover
                end)
                
                OptionButton.MouseLeave:Connect(function()
                    OptionButton.BackgroundColor3 = Colors.Accent
                end)
                
                OptionButton.MouseButton1Click:Connect(function()
                    currentValue = option
                    DropdownButton.Text = dropdownText .. ": " .. option
                    DropdownList.Visible = false
                    isOpen = false
                    DropdownFrame.Size = UDim2.new(1, 0, 0, 22)
                    callback(option)
                end)
            end
            
            DropdownButton.MouseButton1Click:Connect(function()
                isOpen = not isOpen
                DropdownList.Visible = isOpen
                if isOpen then
                    DropdownFrame.Size = UDim2.new(1, 0, 0, 22 + #dropdownOptions * 20 + 2)
                else
                    DropdownFrame.Size = UDim2.new(1, 0, 0, 22)
                end
            end)
            
            return DropdownFrame
        end
        
        return Tab
    end
    
    function Window:Destroy()
        ScreenGui:Destroy()
    end
    
    return Window
end

return Library
